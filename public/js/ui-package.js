(function (exports) {
'use strict';

var UIButton = Object.create(HTMLButtonElement.prototype);

UIButton.initializeHoverAnimation = function(html) {
  var currentAnimateElement = this.querySelector('.animate');
  if(currentAnimateElement) {
    currentAnimateElement.innerHTML = html;
  } else {
    var elm = document.createElement('div');
    elm.innerHTML = html;
    elm.className = 'animate';
    this.appendChild(elm);
  }
};

UIButton.addLabeledIcon = function(iconClass) {
  var currentIcon = this.querySelector('.fa');
  if(currentIcon) {
    currentIcon.className = iconClass;
  } else {
    var elm = document.createElement('i');
    elm.className = iconClass;
    this.appendChild(elm);
  }
};

UIButton.wrapContentInContainer = function() {
  if(this.querySelector('.content')) {
    return;
  }
  var html = this.innerHTML;
  this.innerHTML = "<div class=\"content\">" + html + "</div>";
};

UIButton.initializeIcon = function(iconClass) {
  if(this.childNodes.length === 0) {
    this.classList.add('icon');
  } else {
    this.classList.add('icon-left');
  }
  this.addLabeledIcon(this.getAttribute('icon'));
};

UIButton.createdCallback = function() {
  if(this.getAttribute('icon')) {
    this.initializeIcon(this.getAttribute('icon'));
  }

  if(this.getAttribute('animate')) {
    this.wrapContentInContainer();
    this.initializeHoverAnimation(this.getAttribute('animate'));
  }
};

UIButton.attributeChangedCallback = function(attrName, oldVal, newVal) {
  if(attrName === 'animate') {
    this.wrapContentInContainer();
    this.initializeHoverAnimation(newVal);
  }

  if(attrName === 'icon') {
    this.addLabeledIcon(newVal);
  }
};

var uiButton = document.registerElement('ui-button', {
  prototype: UIButton
});

var noConflict = window.UI;

window.UI = {
  version: '0.0.1', 
  noConflict: noConflict
};

UI.configProperties = {};

UI.setConfig = function(key, value) {
  UI.configProperties[key] = value;
  return value;
};

UI.getConfig = function(key, defaultValue) {
  return UI.configProperties[key] || defaultValue;
};

UI.Button = uiButton;

}((this.LaravelElixirBundle = this.LaravelElixirBundle || {})));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9ob21lL2x1aXovY29kZS91aS1wYWNrYWdlL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy91aS1idXR0b24uanMiLCIvaG9tZS9sdWl6L2NvZGUvdWktcGFja2FnZS9yZXNvdXJjZXMvYXNzZXRzL2pzL3VpLXBhY2thZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IFVJQnV0dG9uID0gT2JqZWN0LmNyZWF0ZShIVE1MQnV0dG9uRWxlbWVudC5wcm90b3R5cGUpO1xuXG5VSUJ1dHRvbi5pbml0aWFsaXplSG92ZXJBbmltYXRpb24gPSBmdW5jdGlvbihodG1sKSB7XG4gIGxldCBjdXJyZW50QW5pbWF0ZUVsZW1lbnQgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5hbmltYXRlJyk7XG4gIGlmKGN1cnJlbnRBbmltYXRlRWxlbWVudCkge1xuICAgIGN1cnJlbnRBbmltYXRlRWxlbWVudC5pbm5lckhUTUwgPSBodG1sO1xuICB9IGVsc2Uge1xuICAgIGxldCBlbG0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBlbG0uaW5uZXJIVE1MID0gaHRtbDtcbiAgICBlbG0uY2xhc3NOYW1lID0gJ2FuaW1hdGUnO1xuICAgIHRoaXMuYXBwZW5kQ2hpbGQoZWxtKTtcbiAgfVxufTtcblxuVUlCdXR0b24uYWRkTGFiZWxlZEljb24gPSBmdW5jdGlvbihpY29uQ2xhc3MpIHtcbiAgbGV0IGN1cnJlbnRJY29uID0gdGhpcy5xdWVyeVNlbGVjdG9yKCcuZmEnKTtcbiAgaWYoY3VycmVudEljb24pIHtcbiAgICBjdXJyZW50SWNvbi5jbGFzc05hbWUgPSBpY29uQ2xhc3M7XG4gIH0gZWxzZSB7XG4gICAgbGV0IGVsbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKTtcbiAgICBlbG0uY2xhc3NOYW1lID0gaWNvbkNsYXNzO1xuICAgIHRoaXMuYXBwZW5kQ2hpbGQoZWxtKTtcbiAgfVxufVxuXG5VSUJ1dHRvbi53cmFwQ29udGVudEluQ29udGFpbmVyID0gZnVuY3Rpb24oKSB7XG4gIGlmKHRoaXMucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKSkge1xuICAgIHJldHVybjtcbiAgfVxuICBsZXQgaHRtbCA9IHRoaXMuaW5uZXJIVE1MO1xuICB0aGlzLmlubmVySFRNTCA9IGA8ZGl2IGNsYXNzPVwiY29udGVudFwiPiR7aHRtbH08L2Rpdj5gO1xufTtcblxuVUlCdXR0b24uaW5pdGlhbGl6ZUljb24gPSBmdW5jdGlvbihpY29uQ2xhc3MpIHtcbiAgaWYodGhpcy5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnaWNvbicpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnaWNvbi1sZWZ0Jyk7XG4gIH1cbiAgdGhpcy5hZGRMYWJlbGVkSWNvbih0aGlzLmdldEF0dHJpYnV0ZSgnaWNvbicpKTtcbn07XG5cblVJQnV0dG9uLmNyZWF0ZWRDYWxsYmFjayA9IGZ1bmN0aW9uKCkge1xuICBpZih0aGlzLmdldEF0dHJpYnV0ZSgnaWNvbicpKSB7XG4gICAgdGhpcy5pbml0aWFsaXplSWNvbih0aGlzLmdldEF0dHJpYnV0ZSgnaWNvbicpKTtcbiAgfVxuXG4gIGlmKHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRlJykpIHtcbiAgICB0aGlzLndyYXBDb250ZW50SW5Db250YWluZXIoKTtcbiAgICB0aGlzLmluaXRpYWxpemVIb3ZlckFuaW1hdGlvbih0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0ZScpKTtcbiAgfVxufTtcblxuVUlCdXR0b24uYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrID0gZnVuY3Rpb24oYXR0ck5hbWUsIG9sZFZhbCwgbmV3VmFsKSB7XG4gIGlmKGF0dHJOYW1lID09PSAnYW5pbWF0ZScpIHtcbiAgICB0aGlzLndyYXBDb250ZW50SW5Db250YWluZXIoKTtcbiAgICB0aGlzLmluaXRpYWxpemVIb3ZlckFuaW1hdGlvbihuZXdWYWwpO1xuICB9XG5cbiAgaWYoYXR0ck5hbWUgPT09ICdpY29uJykge1xuICAgIHRoaXMuYWRkTGFiZWxlZEljb24obmV3VmFsKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBkb2N1bWVudC5yZWdpc3RlckVsZW1lbnQoJ3VpLWJ1dHRvbicsIHtcbiAgcHJvdG90eXBlOiBVSUJ1dHRvblxufSk7IiwiLy8gTWFrZSBzdXJlIHdlIGRvbid0IG92ZXJyaWRlIHRoZSBleGlzdGluZyAnVUknIGdsb2JhbC5cbmxldCBub0NvbmZsaWN0ID0gd2luZG93LlVJO1xuXG53aW5kb3cuVUkgPSB7XG4gIHZlcnNpb246ICcwLjAuMScsIFxuICBub0NvbmZsaWN0XG59O1xuXG5VSS5jb25maWdQcm9wZXJ0aWVzID0ge307XG5cblVJLnNldENvbmZpZyA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgVUkuY29uZmlnUHJvcGVydGllc1trZXldID0gdmFsdWU7XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cblVJLmdldENvbmZpZyA9IGZ1bmN0aW9uKGtleSwgZGVmYXVsdFZhbHVlKSB7XG4gIHJldHVybiBVSS5jb25maWdQcm9wZXJ0aWVzW2tleV0gfHwgZGVmYXVsdFZhbHVlO1xufTtcblxuVUkuQnV0dG9uID0gcmVxdWlyZSgnLi9jb21wb25lbnRzL3VpLWJ1dHRvbicpOyJdLCJuYW1lcyI6WyJsZXQiLCJyZXF1aXJlJCQwIl0sIm1hcHBpbmdzIjoiOzs7QUFBQUEsSUFBSSxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7QUFFMUQsUUFBUSxDQUFDLHdCQUF3QixHQUFHLFNBQVMsSUFBSSxFQUFFO0VBQ2pEQSxJQUFJLHFCQUFxQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7RUFDM0QsR0FBRyxxQkFBcUIsRUFBRTtJQUN4QixxQkFBcUIsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0dBQ3hDLE1BQU07SUFDTEEsSUFBSSxHQUFHLEdBQUcsUUFB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